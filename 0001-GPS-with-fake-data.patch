From a15b508b8e8bf571edd9bece8858d180da6b96ec Mon Sep 17 00:00:00 2001
From: marui <marui@emsym.com>
Date: Fri, 14 Apr 2017 13:54:42 +0800
Subject: [PATCH] GPS with fake data


diff --git a/Project_Settings/Debugger/IoTModule256_FLASH_Segger J-Link_Trace.launch b/Project_Settings/Debugger/IoTModule256_FLASH_Segger J-Link_Trace.launch
index c32fd62..83c4c11 100644
--- a/Project_Settings/Debugger/IoTModule256_FLASH_Segger J-Link_Trace.launch	
+++ b/Project_Settings/Debugger/IoTModule256_FLASH_Segger J-Link_Trace.launch	
@@ -113,7 +113,7 @@
 <booleanAttribute key="org.eclipse.cdt.launch.ENABLE_VARIABLE_BOOKKEEPING" value="false"/>
 <stringAttribute key="org.eclipse.cdt.launch.FORMAT" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;no&quot;?&gt;&lt;contentList/&gt;"/>
 <stringAttribute key="org.eclipse.cdt.launch.GLOBAL_VARIABLES" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;no&quot;?&gt;&#13;&#10;&lt;globalVariableList&gt;&#13;&#10;&lt;globalVariable name=&quot;g_buffirstbyte&quot; path=&quot;&quot;/&gt;&#13;&#10;&lt;globalVariable name=&quot;g_buflastbyte&quot; path=&quot;&quot;/&gt;&#13;&#10;&lt;globalVariable name=&quot;lastmsg_tail&quot; path=&quot;&quot;/&gt;&#13;&#10;&lt;globalVariable name=&quot;comm_buf&quot; path=&quot;&quot;/&gt;&#13;&#10;&lt;globalVariable name=&quot;bufhead&quot; path=&quot;&quot;/&gt;&#13;&#10;&lt;globalVariable name=&quot;buftail&quot; path=&quot;&quot;/&gt;&#13;&#10;&lt;globalVariable name=&quot;cur_bufp&quot; path=&quot;&quot;/&gt;&#13;&#10;&lt;globalVariable name=&quot;g_host_msg_queue_head&quot; path=&quot;&quot;/&gt;&#13;&#10;&lt;globalVariable name=&quot;g_at_result_last_valid_pointer_in_checking_buf&quot; path=&quot;&quot;/&gt;&#13;&#10;&lt;globalVariable name=&quot;g_mqtt&quot; path=&quot;&quot;/&gt;&#13;&#10;&lt;globalVariable name=&quot;at_cmd_result_checking_buf&quot; path=&quot;&quot;/&gt;&#13;&#10;&lt;globalVariable name=&quot;g_current_at_expected_result&quot; path=&quot;&quot;/&gt;&#13;&#10;&lt;globalVariable name=&quot;at_cmd_recv_buf&quot; path=&quot;&quot;/&gt;&#13;&#10;&lt;globalVariable name=&quot;g_at_result_last_valid_pointer_in_recv_buf&quot; path=&quot;&quot;/&gt;&#13;&#10;&lt;globalVariable name=&quot;g_at_result_recv_end_pointer&quot; path=&quot;&quot;/&gt;&#13;&#10;&lt;/globalVariableList&gt;&#13;&#10;"/>
-<stringAttribute key="org.eclipse.cdt.launch.MEMORY_BLOCKS" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;no&quot;?&gt;&#13;&#10;&lt;memoryBlockExpressionList&gt;&#13;&#10;&lt;memoryBlockExpressionItem&gt;&#13;&#10;&lt;memorySpaceID text=&quot;Virtual&quot;/&gt;&#13;&#10;&lt;expression text=&quot;at_cmd_result_checking_buf&quot;/&gt;&#13;&#10;&lt;/memoryBlockExpressionItem&gt;&#13;&#10;&lt;/memoryBlockExpressionList&gt;&#13;&#10;"/>
+<stringAttribute key="org.eclipse.cdt.launch.MEMORY_BLOCKS" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;no&quot;?&gt;&#13;&#10;&lt;memoryBlockExpressionList/&gt;&#13;&#10;"/>
 <stringAttribute key="org.eclipse.cdt.launch.PROGRAM_NAME" value="FLASH/IoTModule256.elf"/>
 <stringAttribute key="org.eclipse.cdt.launch.PROJECT_ATTR" value="IoTModule256"/>
 <stringAttribute key="org.eclipse.cdt.launch.PROJECT_BUILD_CONFIG_ID_ATTR" value="org.eclipse.cdt.cross.arm.gnu.sourcery.windows.elf.debug.1028801003"/>
diff --git a/Sources/GPS.c b/Sources/GPS.c
index f45a659..d85b665 100644
--- a/Sources/GPS.c
+++ b/Sources/GPS.c
@@ -186,12 +186,26 @@ void GPSOtherCommonExpectedResultChecking()
 
 }
 
+extern int g_pin_retry_times;
+extern int g_mqtt_connecting_timeout;
+int g_gps_fake_timeout = MAX_FACK_GPS_TIMEOUT;
 void GPSCheckRecvResult_internal_async()
 {
 	char *tmpp=at_cmd_recv_buf;
 	if(!uart0DeviceDataPrv)
 		return ERR_PARAM_VALUE;
 
+	char *fakegpsdata = "4717.11364,N,00833.91565,E,092321.00,A,A*60";
+	if(g_pin_retry_times == 1 && g_gps_fake_timeout == 0 && g_is_new_gps_data_received ==0)
+	{
+		g_new_gps_data_start = fakegpsdata;
+		g_new_gps_data_length = strlen(fakegpsdata);
+		memcpy(recv_server_data_buf,g_new_gps_data_start, g_new_gps_data_length);
+		g_is_new_gps_data_received =1;
+		g_gps_fake_timeout = MAX_FACK_GPS_TIMEOUT;
+		return;
+	}
+	
 	if(uart0DeviceDataPrv->InpRecvDataNum > MIN_RESULT_STRING_SIZE)
 	{
 		if(uart0DeviceDataPrv->InpRecvDataNum < MAX_CMD_RECV_BUF_SIZE)
diff --git a/Sources/mqttc/mqtt.h b/Sources/mqttc/mqtt.h
index a1939d8..a34ab4e 100644
--- a/Sources/mqttc/mqtt.h
+++ b/Sources/mqttc/mqtt.h
@@ -66,6 +66,7 @@
 #define MQTT_MSG_ONLINE		"1"
 #define MQTT_MSG_OFFLINE	"0"
 #define MQTT_TOPIC_STRING	"/tianrong/monitor/xd/xd004"
+#define MQTT_TOPIC_GPS	"/tianrong/gps/xd/xd004"
 
 #define MQTT_ERR_STR_LEN	128
 /*
diff --git a/Sources/mqx_tasks.c b/Sources/mqx_tasks.c
index 788e50e..e09a5ad 100644
--- a/Sources/mqx_tasks.c
+++ b/Sources/mqx_tasks.c
@@ -109,7 +109,7 @@ int g_pin_retry_times=0;
 int g_mqtt_connecting_timeout = -1;
 int g_mqtt_ping_counter = 0;
 //>>>>end of net state
-
+extern int g_gps_fake_timeout;
 byte commTimerFunc(void * param)
 {
 	uint16_t * pcounter = param;
@@ -121,6 +121,9 @@ byte commTimerFunc(void * param)
 	
 	if(g_at_async_read_timeout) 
 		g_at_async_read_timeout--;
+	
+	if(g_gps_fake_timeout)
+		g_gps_fake_timeout --;
 	//if(g_gprs_or_wifi_mode == GPRS_MODE)
 	//	GPRSCheckRecvResult_internal();
 	//else
@@ -488,13 +491,20 @@ void Task1_task(uint32_t task_init_data)
 				  else if(g_is_new_wifi_data_received)
 					  result = _send_msg_to_queue(g_gprs_msg_queue_p, NEW_GPRS_DATA, g_new_wifi_data_start, NULL, g_new_wifi_data_length);
 				  else
-					  result = _send_msg_to_queue(g_gprs_msg_queue_p, NEW_GPRS_DATA, g_new_gps_data_start, NULL, g_new_gps_data_length);
+					  result = _send_msg_to_queue(g_host_msg_queue_p, NEW_GPS_DATA, g_new_gps_data_start,
+							  g_new_gps_data_start+g_new_gps_data_length-1, g_new_gps_data_length);
+					  //result = _send_msg_to_queue(g_gprs_msg_queue_p, NEW_GPRS_DATA, g_new_gps_data_start, NULL, g_new_gps_data_length);
 				  if(result == ERR_OK)
 				  {
 					  if(g_is_new_gprs_data_received)
 						  g_is_new_gprs_data_received =0;//clear flag
-					  else
+					  else if(g_is_new_wifi_data_received)
 						  g_is_new_wifi_data_received = 0;
+					  else
+					  {
+						  g_is_new_gps_data_received = 0;
+						  g_gps_fake_timeout = MAX_FACK_GPS_TIMEOUT;
+					  }
 					  //_lwevent_set(&commEvent,EVENT_MASK2);
 				  }
 				  else//send msg failed
@@ -728,6 +738,22 @@ void Task2_task(uint32_t task_init_data)
 						  g_wait_comm_msg_precess_retry_times = MAX_WAIT_COMM_MSG_PROCESS_RETRY_TIMES;//reset counter of comm msg process
 						  g_timer_tick = 0;//just publish msg, don't send ping, reset timer counter
 					  }
+					  else if(msg.status == NEW_GPS_DATA)
+					  {
+						  //move data to line buffer
+						  						  if(msg.tail < msg.head)
+						  						  {
+						  							  int taillen = g_buflastbyte - msg.head + 1;
+						  							  char * tmphead = g_buflastbyte + 1;
+						  							  memcpy(tmphead, msg.head, taillen);
+						  							  memcpy(tmphead + taillen, g_buffirstbyte, msg.len - taillen);
+						  							  client_publish_msg(MQTT_TOPIC_GPS, msg.len, tmphead);
+						  						  }
+						  						  else
+						  							  client_publish_msg(MQTT_TOPIC_GPS, msg.len, msg.head);
+						  						  g_wait_comm_msg_precess_retry_times = MAX_WAIT_COMM_MSG_PROCESS_RETRY_TIMES;//reset counter of comm msg process
+						  						  g_timer_tick = 0;//just publish msg, don't send ping, reset timer counter
+					  }
 				  }
 			  }
 		  }
diff --git a/Sources/util.h b/Sources/util.h
index 6b6932b..bfc03b9 100644
--- a/Sources/util.h
+++ b/Sources/util.h
@@ -17,12 +17,15 @@
 //#define TIMER_DEBUG
 //#define DUMP_DATA
 
+#define MAX_FACK_GPS_TIMEOUT	10
+
 //msgq
 enum send_status{
 	NEW_HOST_DATA_READ_TO_SEND,
 	NEW_GPRS_DATA,
 	SEND_OUT,
 	SEND_FAILED,
+	NEW_GPS_DATA
 };
 
 #define MAX_MQTT_CONNECTING_TIMEOUT	50
-- 
1.9.4.msysgit.0

