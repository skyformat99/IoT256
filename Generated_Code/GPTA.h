/* ###################################################################
**     THIS COMPONENT MODULE IS GENERATED BY THE TOOL. DO NOT MODIFY IT.
**     Filename    : GPTA.h
**     Project     : ProcessorExpert
**     Processor   : MKL26Z256VLH4
**     Component   : GPIO_LDD
**     Version     : Component 01.128, Driver 01.06, CPU db: 3.00.000
**     Compiler    : GNU C Compiler
**     Date/Time   : 2017-05-13, 19:31, # CodeGen: 69
**     Abstract    :
**         The HAL GPIO component will provide a low level API for unified
**         access to general purpose digital input/output pins across
**         various device designs.
**
**         RTOS drivers using HAL GPIO API will be simpler and more
**         portable to various microprocessors.
**     Settings    :
**          Component name                                 : GPTA
**          Port                                           : PTA
**          Port width                                     : 32 bits
**          Mask of allocated pins                         : 3020
**          Interrupt service/event                        : Disabled
**          Bit fields                                     : 3
**            Bit field                                    : 
**              Field name                                 : PTA5_LED2
**              Pins                                       : 1
**                Pin                                      : 
**                  Pin                                    : PTA5/USB_CLKIN/TPM0_CH2/I2S0_TX_BCLK
**                  Pin signal                             : 
**                  Initial pin direction                  : Output
**                    Initial output state                 : 0
**                  Initial pin event                      : Disabled
**            Bit field                                    : 
**              Field name                                 : PTA12_LED3
**              Pins                                       : 1
**                Pin                                      : 
**                  Pin                                    : PTA12/TPM1_CH0/I2S0_TXD0
**                  Pin signal                             : 
**                  Initial pin direction                  : Output
**                    Initial output state                 : 0
**                  Initial pin event                      : Disabled
**            Bit field                                    : 
**              Field name                                 : PTA13_LED4
**              Pins                                       : 1
**                Pin                                      : 
**                  Pin                                    : PTA13/TPM1_CH1/I2S0_TX_FS
**                  Pin signal                             : 
**                  Initial pin direction                  : Output
**                    Initial output state                 : 0
**                  Initial pin event                      : Disabled
**          Initialization                                 : 
**            Auto initialization                          : yes
**            Event mask                                   : 
**              OnPortEvent                                : Disabled
**     Contents    :
**         Init            - LDD_TDeviceData* GPTA_Init(LDD_TUserData *UserDataPtr);
**         SetFieldValue   - void GPTA_SetFieldValue(LDD_TDeviceData *DeviceDataPtr, LDD_GPIO_TBitField...
**         GetFieldValue   - GPTA_TFieldValue GPTA_GetFieldValue(LDD_TDeviceData *DeviceDataPtr,...
**         ClearFieldBits  - void GPTA_ClearFieldBits(LDD_TDeviceData *DeviceDataPtr, LDD_GPIO_TBitField...
**         SetFieldBits    - void GPTA_SetFieldBits(LDD_TDeviceData *DeviceDataPtr, LDD_GPIO_TBitField...
**         ToggleFieldBits - void GPTA_ToggleFieldBits(LDD_TDeviceData *DeviceDataPtr, LDD_GPIO_TBitField...
**
**     Copyright : 1997 - 2013 Freescale Semiconductor, Inc. All Rights Reserved.
**     SOURCE DISTRIBUTION PERMISSIBLE as directed in End User License Agreement.
**     
**     http      : www.freescale.com
**     mail      : support@freescale.com
** ###################################################################*/
/*!
** @file GPTA.h
** @version 01.06
** @brief
**         The HAL GPIO component will provide a low level API for unified
**         access to general purpose digital input/output pins across
**         various device designs.
**
**         RTOS drivers using HAL GPIO API will be simpler and more
**         portable to various microprocessors.
*/         
/*!
**  @addtogroup GPTA_module GPTA module documentation
**  @{
*/         

#ifndef __GPTA_H
#define __GPTA_H

/* MODULE GPTA. */

/* Include shared modules, which are used for whole project */
#include "PE_Types.h"
#include "PE_Error.h"
#include "PE_Const.h"
#include "IO_Map.h"
/* Include inherited beans */
#include "IO_Map.h"
#include "GPIO_PDD.h"
#include "PORT_PDD.h"

#include "Cpu.h"

#ifdef __cplusplus
extern "C" {
#endif 


/*! Peripheral base address of a device allocated by the component. This constant can be used directly in PDD macros. */
#define GPTA_PRPH_BASE_ADDRESS  0x400FF000U
  
/*! Device data structure pointer used when auto initialization property is enabled. This constant can be passed as a first parameter to all component's methods. */
#define GPTA_DeviceData  ((LDD_TDeviceData *)PE_LDD_GetDeviceStructure(PE_LDD_COMPONENT_GPTA_ID))

/* Methods configuration constants - generated for all enabled component's methods */
#define GPTA_Init_METHOD_ENABLED       /*!< Init method of the component GPTA is enabled (generated) */
#define GPTA_SetFieldValue_METHOD_ENABLED /*!< SetFieldValue method of the component GPTA is enabled (generated) */
#define GPTA_GetFieldValue_METHOD_ENABLED /*!< GetFieldValue method of the component GPTA is enabled (generated) */
#define GPTA_ClearFieldBits_METHOD_ENABLED /*!< ClearFieldBits method of the component GPTA is enabled (generated) */
#define GPTA_SetFieldBits_METHOD_ENABLED /*!< SetFieldBits method of the component GPTA is enabled (generated) */
#define GPTA_ToggleFieldBits_METHOD_ENABLED /*!< ToggleFieldBits method of the component GPTA is enabled (generated) */

/* Events configuration constants - generated for all enabled component's events */

/* Definition of bit field constants */
#define PTA5_LED2 ((LDD_GPIO_TBitField)0)
#define PTA12_LED3 ((LDD_GPIO_TBitField)1)
#define PTA13_LED4 ((LDD_GPIO_TBitField)2)

/* Definition of implementation constants */
#define GPTA_ALLOCATED_PINS_MASK 0x3020U /*!< Mask of all allocated pins from the port */
#define GPTA_MODULE_BASE_ADDRESS FPTA_BASE_PTR /*!< Name of macro used as the base address */
#define GPTA_PORTCONTROL_BASE_ADDRESS PORTA_BASE_PTR /*!< Name of macro used as the base address */
#define GPTA_AVAILABLE_EVENTS_MASK 0x00U /*!< Mask of all available events */
#define GPTA_FIELD_0_PIN_0 LDD_GPIO_PIN_5 /*!< Constant for the pin in the field used in the method ConnectPin */
#define GPTA_FIELD_1_PIN_0 LDD_GPIO_PIN_12 /*!< Constant for the pin in the field used in the method ConnectPin */
#define GPTA_FIELD_2_PIN_0 LDD_GPIO_PIN_13 /*!< Constant for the pin in the field used in the method ConnectPin */
#define GPTA_PTA5_LED2_START_BIT 5u    /*!< Index of the starting bit of the bit field (0 represents LSB) */
#define GPTA_PTA5_LED2_MASK 0x20u      /*!< Mask of the bits allocated by the bit field (within the port) */
#define GPTA_PTA12_LED3_START_BIT 12u  /*!< Index of the starting bit of the bit field (0 represents LSB) */
#define GPTA_PTA12_LED3_MASK 0x1000u   /*!< Mask of the bits allocated by the bit field (within the port) */
#define GPTA_PTA13_LED4_START_BIT 13u  /*!< Index of the starting bit of the bit field (0 represents LSB) */
#define GPTA_PTA13_LED4_MASK 0x2000u   /*!< Mask of the bits allocated by the bit field (within the port) */
/* Representation of unaligned data value of the port.
   Unsigned integer of proper width depending on the size of the GPIO port allocated.
   Typically the value of n-th bit represents the data for the n-th pin within the port.
   Such value is not abstracted from the physical position of the bits within the port. */
typedef uint32_t GPTA_TPortValue;

/* Representation of right-aligned data value of the bit field.
   Typically the value of n-th bit represents the data of the n-th bit within the bit field (not within the port).
   There are used only so many lowest bits, as it is denoted by the width of the bit field.
   Such value is abstracted from the physical position of the bit field pins within the port.
   Equals to the type <compId>_TPortValue. */
typedef GPTA_TPortValue GPTA_TFieldValue;



/*
** ===================================================================
**     Method      :  GPTA_Init (component GPIO_LDD)
*/
/*!
**     @brief
**         This method initializes the associated peripheral(s) and the
**         component internal variables. The method is called
**         automatically as a part of the application initialization
**         code.
**     @param
**         UserDataPtr     - Pointer to the RTOS device
**                           structure. This pointer will be passed to
**                           all events as parameter.
**     @return
**                         - Pointer to the dynamically allocated private
**                           structure or NULL if there was an error.
*/
/* ===================================================================*/
LDD_TDeviceData* GPTA_Init(LDD_TUserData *UserDataPtr);

/*
** ===================================================================
**     Method      :  GPTA_SetFieldValue (component GPIO_LDD)
*/
/*!
**     @brief
**         This method sets the output data value of the specified bit
**         field.
**     @param
**         DeviceDataPtr   - Device data structure
**                           pointer returned by <Init> method.
**     @param
**         Field           - Bit field to write. Bit fields are
**                           defined during design time and for each bit
**                           field there is a generated constant.
**     @param
**         Value           - Aligned data value to writting to the
**                           specified bit field. The bit 0 corresponds
**                           with the pin which has index 0 within the
**                           given bit field, the bit 1 corresponds with
**                           the pin which has index 1 within the given
**                           bit field, etc.
*/
/* ===================================================================*/
void GPTA_SetFieldValue(LDD_TDeviceData *DeviceDataPtr, LDD_GPIO_TBitField Field, GPTA_TFieldValue Value);

/*
** ===================================================================
**     Method      :  GPTA_GetFieldValue (component GPIO_LDD)
*/
/*!
**     @brief
**         This method returns the current input data of the specified
**         field.
**     @param
**         DeviceDataPtr   - Device data structure
**                           pointer returned by <Init> method.
**     @param
**         Field           - Bit field to reading. Bit fields are
**                           defined during design time and for each bit
**                           field there is a generated constant.
**     @return
**                         - Aligned current port input value masked for
**                           allocated pins of the field. The bit 0
**                           corresponds with the pin which has index 0
**                           within the given bit field, the bit 1
**                           corresponds with the pin which has index 1
**                           within the given bit field, etc.
*/
/* ===================================================================*/
GPTA_TFieldValue GPTA_GetFieldValue(LDD_TDeviceData *DeviceDataPtr, LDD_GPIO_TBitField Field);

/*
** ===================================================================
**     Method      :  GPTA_ClearFieldBits (component GPIO_LDD)
*/
/*!
**     @brief
**         This method drives the specified bits of the specified bit
**         field to the inactive level.
**     @param
**         DeviceDataPtr   - Device data structure
**                           pointer returned by <Init> method.
**     @param
**         Field           - Bit field to write. Bit fields are
**                           defined during design time and for each bit
**                           field there is a generated constant.
**     @param
**         Mask            - Aligned mask of bits to setting the
**                           inactive level. Each field pin has
**                           corresponding bit in the mask. Bit value 0
**                           means not selected bit, bit value 1 means
**                           selected bit. The bit 0 corresponds with
**                           the pin which has index 0 within the given
**                           bit field, the bit 1 corresponds with the
**                           pin which has index 1 within the given bit
**                           field, etc.
*/
/* ===================================================================*/
void GPTA_ClearFieldBits(LDD_TDeviceData *DeviceDataPtr, LDD_GPIO_TBitField Field, GPTA_TFieldValue Mask);

/*
** ===================================================================
**     Method      :  GPTA_SetFieldBits (component GPIO_LDD)
*/
/*!
**     @brief
**         This method drives the specified bits of the specified bit
**         field to the active level.
**     @param
**         DeviceDataPtr   - Device data structure
**                           pointer returned by <Init> method.
**     @param
**         Field           - Bit field to write. Bit fields are
**                           defined during design time and for each bit
**                           field there is a generated constant.
**     @param
**         Mask            - Aligned mask of bits to setting the
**                           active level. Each field pin has
**                           corresponding bit in the mask. Bit value 0
**                           means not selected bit, bit value 1 means
**                           selected bit. The bit 0 corresponds with
**                           the pin which has index 0 within the given
**                           bit field, the bit 1 corresponds with the
**                           pin which has index 1 within the given bit
**                           field, etc.
*/
/* ===================================================================*/
void GPTA_SetFieldBits(LDD_TDeviceData *DeviceDataPtr, LDD_GPIO_TBitField Field, GPTA_TFieldValue Mask);

/*
** ===================================================================
**     Method      :  GPTA_ToggleFieldBits (component GPIO_LDD)
*/
/*!
**     @brief
**         This method inverts the specified bits of the specified bit
**         field to other level.
**     @param
**         DeviceDataPtr   - Device data structure
**                           pointer returned by <Init> method.
**     @param
**         Field           - Bit field to write. Bit fields are
**                           defined during design time and for each bit
**                           field there is a generated constant.
**     @param
**         Mask            - Aligned mask of bits to inverting the
**                           current level. Each field pin has
**                           corresponding bit in the mask. Bit value 0
**                           means not selected bit, bit value 1 means
**                           selected bit. The bit 0 corresponds with
**                           the pin which has index 0 within the given
**                           bit field, the bit 1 corresponds with the
**                           pin which has index 1 within the given bit
**                           field, etc.
*/
/* ===================================================================*/
void GPTA_ToggleFieldBits(LDD_TDeviceData *DeviceDataPtr, LDD_GPIO_TBitField Field, GPTA_TFieldValue Mask);

/* END GPTA. */

#ifdef __cplusplus
}  /* extern "C" */
#endif 

#endif
/* ifndef __GPTA_H */
/*!
** @}
*/
/*
** ###################################################################
**
**     This file was created by Processor Expert 10.2 [05.06]
**     for the Freescale Kinetis series of microcontrollers.
**
** ###################################################################
*/
